{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ElAng\\\\OneDrive\\\\Desktop\\\\Sistema con REACT\\\\client\\\\src\\\\context\\\\postContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, createContext, useContext, useEffect } from \"react\";\nimport { createPostsRequests, deletePostsRequests, getPostRequests, getPostsRequests, updatePostRequests } from \"../api/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const postContext = /*#__PURE__*/createContext();\nexport const usePosts = () => {\n  _s();\n  const context = useContext(postContext);\n  return context;\n};\n_s(usePosts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PostProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const getPosts = async () => {\n    const res = await getPostsRequests();\n    setPosts(res.data);\n  };\n  const getPost = async id => {\n    const res = await getPostRequests(id);\n    return res.data;\n  };\n  const createPost = async post => {\n    const res = await createPostsRequests(post);\n    setPosts([...posts, res.data]);\n  };\n  const updatePost = async (id, post) => {\n    const res = await updatePostRequests(post);\n    console.log(res);\n  };\n  const deletePost = async id => {\n    const res = await deletePostsRequests(id);\n    if (res.status === 200) {\n      setPosts(posts.filter(post => post._id !== id));\n    }\n  };\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(postContext.Provider, {\n    value: {\n      posts,\n      getPosts,\n      createPost,\n      deletePost,\n      getPost,\n      updatePost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n_s2(PostProvider, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostProvider;\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["useState","createContext","useContext","useEffect","createPostsRequests","deletePostsRequests","getPostRequests","getPostsRequests","updatePostRequests","jsxDEV","_jsxDEV","postContext","usePosts","_s","context","PostProvider","_ref","_s2","children","posts","setPosts","getPosts","res","data","getPost","id","createPost","post","updatePost","console","log","deletePost","status","filter","_id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ElAng/OneDrive/Desktop/Sistema con REACT/client/src/context/postContext.js"],"sourcesContent":["import { useState, createContext, useContext, useEffect } from \"react\"\r\nimport { createPostsRequests, deletePostsRequests, getPostRequests, getPostsRequests, updatePostRequests } from \"../api/posts\"\r\n\r\nexport const postContext = createContext()\r\n\r\nexport const usePosts = () => {\r\n    const context = useContext(postContext)\r\n    return context\r\n}\r\n\r\nexport const PostProvider = ({ children }) => {\r\n\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const getPosts = async () => {\r\n        const res = await getPostsRequests()\r\n        setPosts(res.data)\r\n    }\r\n    const getPost = async (id) => {\r\n        const res = await getPostRequests(id)\r\n        return res.data\r\n    }\r\n    const createPost = async (post) => {\r\n        const res = await createPostsRequests(post)\r\n        setPosts([...posts,res.data])\r\n    }\r\n    const updatePost = async (id,post) => {\r\n        const res = await updatePostRequests(post)\r\n        console.log(res)\r\n    }\r\n\r\n    const deletePost = async(id) => {\r\n        const res = await deletePostsRequests(id)\r\n        if (res.status === 200 ){\r\n            setPosts(posts.filter(post => post._id !== id))\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPosts()\r\n    }, [])\r\n\r\n\r\n    return <postContext.Provider value={{\r\n        posts,\r\n        getPosts,\r\n        createPost,\r\n        deletePost,\r\n        getPost,\r\n        updatePost\r\n    }}>\r\n        {children}\r\n    </postContext.Provider>\r\n}"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,mBAAmB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,kBAAkB,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9H,OAAO,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMW,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,OAAO,GAAGZ,UAAU,CAACS,WAAW,CAAC;EACvC,OAAOG,OAAO;AAClB,CAAC;AAAAD,EAAA,CAHYD,QAAQ;AAKrB,OAAO,MAAMG,YAAY,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAErC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMqB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,GAAG,GAAG,MAAMf,gBAAgB,CAAC,CAAC;IACpCa,QAAQ,CAACE,GAAG,CAACC,IAAI,CAAC;EACtB,CAAC;EACD,MAAMC,OAAO,GAAG,MAAOC,EAAE,IAAK;IAC1B,MAAMH,GAAG,GAAG,MAAMhB,eAAe,CAACmB,EAAE,CAAC;IACrC,OAAOH,GAAG,CAACC,IAAI;EACnB,CAAC;EACD,MAAMG,UAAU,GAAG,MAAOC,IAAI,IAAK;IAC/B,MAAML,GAAG,GAAG,MAAMlB,mBAAmB,CAACuB,IAAI,CAAC;IAC3CP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EACjC,CAAC;EACD,MAAMK,UAAU,GAAG,MAAAA,CAAOH,EAAE,EAACE,IAAI,KAAK;IAClC,MAAML,GAAG,GAAG,MAAMd,kBAAkB,CAACmB,IAAI,CAAC;IAC1CE,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;EACpB,CAAC;EAED,MAAMS,UAAU,GAAG,MAAMN,EAAE,IAAK;IAC5B,MAAMH,GAAG,GAAG,MAAMjB,mBAAmB,CAACoB,EAAE,CAAC;IACzC,IAAIH,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;MACpBZ,QAAQ,CAACD,KAAK,CAACc,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACO,GAAG,KAAKT,EAAE,CAAC,CAAC;IACnD;EACJ,CAAC;EACDtB,SAAS,CAAC,MAAM;IACZkB,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,oBAAOX,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAChCjB,KAAK;MACLE,QAAQ;MACRK,UAAU;MACVK,UAAU;MACVP,OAAO;MACPI;IACJ,CAAE;IAAAV,QAAA,EACGA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAC3B,CAAC;AAAAvB,GAAA,CA1CYF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}