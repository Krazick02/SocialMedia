{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ElAng\\\\OneDrive\\\\Desktop\\\\Sistema con REACT\\\\client\\\\src\\\\pages\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Formik, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { usePosts } from \"../context/postContext\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostForm() {\n  _s();\n  const {\n    createPost,\n    getPost\n  } = usePosts();\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    post,\n    setPost\n  } = useState({\n    title: '',\n    description: ''\n  });\n  useEffect(async () => {\n    if (params.id) {\n      const res = await getPost(params.id);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Formulario\", /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        post\n      },\n      validationSchema: Yup.object({\n        title: Yup.string().required(\"Title is required\"),\n        description: Yup.string().required(\"Description is required\")\n      }),\n      onSubmit: async (values, actions) => {\n        await createPost(values);\n        navigate('/');\n      },\n      children: _ref => {\n        let {\n          handleSubmit\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"title\",\n            placeholder: \"title\",\n            className: \"px-3 py-2 focus:outline-nonde rounded bg-gray-600 text-white w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: 'p',\n            className: \"text-red-400 textsm\",\n            name: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"description\",\n            placeholder: \"description\",\n            className: \"px-3 py-2 focus:outline-nonde rounded bg-gray-600 text-white w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: 'p',\n            className: \"text-red-400 textsm\",\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"c7Oa+ccF4dSIMwATwP7NOIt07WE=\", false, function () {\n  return [usePosts, useNavigate, useParams];\n});\n_c = PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Form","Formik","Field","ErrorMessage","Yup","usePosts","useNavigate","useParams","useEffect","useState","jsxDEV","_jsxDEV","PostForm","_s","createPost","getPost","navigate","params","post","setPost","title","description","id","res","children","initialValues","validationSchema","object","string","required","onSubmit","values","actions","_ref","handleSubmit","name","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","component","type","_c","$RefreshReg$"],"sources":["C:/Users/ElAng/OneDrive/Desktop/Sistema con REACT/client/src/pages/PostForm.js"],"sourcesContent":["import { Form,Formik,Field, ErrorMessage} from \"formik\"\r\nimport * as Yup from 'yup'\r\nimport { usePosts } from \"../context/postContext\"\r\nimport { useNavigate,useParams } from \"react-router-dom\"\r\nimport { useEffect, useState} from \"react\"\r\n\r\nexport function PostForm() {\r\n  const {createPost,getPost} = usePosts()\r\n  const navigate = useNavigate()\r\n  const params = useParams()\r\n  const {post,setPost} = useState({\r\n    title:'',\r\n    description:''\r\n  })\r\n  \r\n\r\n  useEffect( async() => {\r\n    if (params.id){\r\n      const res = await getPost(params.id)\r\n    }\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div>Formulario\r\n\r\n      <Formik\r\n        initialValues={{post}}\r\n        validationSchema={Yup.object({\r\n          title:Yup.string().required(\"Title is required\"),\r\n          description:Yup.string().required(\"Description is required\")\r\n        })}\r\n        onSubmit={async (values,actions)=>{\r\n          await createPost(values)\r\n          navigate('/')\r\n        }}\r\n      >\r\n        {({handleSubmit}) => (\r\n          <Form onSubmit={handleSubmit}>\r\n          <Field name='title' placeholder=\"title\"\r\n            className='px-3 py-2 focus:outline-nonde rounded bg-gray-600 text-white w-full'\r\n          />\r\n          <ErrorMessage component={'p'} className=\"text-red-400 textsm\" name=\"title\"/>\r\n          <Field name='description' placeholder=\"description\"\r\n            className='px-3 py-2 focus:outline-nonde rounded bg-gray-600 text-white w-full'\r\n            />\r\n          <ErrorMessage component={'p'} className=\"text-red-400 textsm\" name=\"description\"/>\r\n          <button type=\"submit\">Save</button>\r\n        </Form>\r\n        )}\r\n      </Formik>\r\n\r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAACC,MAAM,EAACC,KAAK,EAAEC,YAAY,QAAO,QAAQ;AACvD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,WAAW,EAACC,SAAS,QAAQ,kBAAkB;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAACC,UAAU;IAACC;EAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACvC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM;IAACW,IAAI;IAACC;EAAO,CAAC,GAAGV,QAAQ,CAAC;IAC9BW,KAAK,EAAC,EAAE;IACRC,WAAW,EAAC;EACd,CAAC,CAAC;EAGFb,SAAS,CAAE,YAAW;IACpB,IAAIS,MAAM,CAACK,EAAE,EAAC;MACZ,MAAMC,GAAG,GAAG,MAAMR,OAAO,CAACE,MAAM,CAACK,EAAE,CAAC;IACtC;EACF,CAAC,EAAC,EAAE,CAAC;EAGL,oBACEX,OAAA;IAAAa,QAAA,GAAK,YAEH,eAAAb,OAAA,CAACV,MAAM;MACLwB,aAAa,EAAE;QAACP;MAAI,CAAE;MACtBQ,gBAAgB,EAAEtB,GAAG,CAACuB,MAAM,CAAC;QAC3BP,KAAK,EAAChB,GAAG,CAACwB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,mBAAmB,CAAC;QAChDR,WAAW,EAACjB,GAAG,CAACwB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB;MAC7D,CAAC,CAAE;MACHC,QAAQ,EAAE,MAAAA,CAAOC,MAAM,EAACC,OAAO,KAAG;QAChC,MAAMlB,UAAU,CAACiB,MAAM,CAAC;QACxBf,QAAQ,CAAC,GAAG,CAAC;MACf,CAAE;MAAAQ,QAAA,EAEDS,IAAA;QAAA,IAAC;UAACC;QAAY,CAAC,GAAAD,IAAA;QAAA,oBACdtB,OAAA,CAACX,IAAI;UAAC8B,QAAQ,EAAEI,YAAa;UAAAV,QAAA,gBAC7Bb,OAAA,CAACT,KAAK;YAACiC,IAAI,EAAC,OAAO;YAACC,WAAW,EAAC,OAAO;YACrCC,SAAS,EAAC;UAAqE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChF,CAAC,eACF9B,OAAA,CAACR,YAAY;YAACuC,SAAS,EAAE,GAAI;YAACL,SAAS,EAAC,qBAAqB;YAACF,IAAI,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC5E9B,OAAA,CAACT,KAAK;YAACiC,IAAI,EAAC,aAAa;YAACC,WAAW,EAAC,aAAa;YACjDC,SAAS,EAAC;UAAqE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E,CAAC,eACJ9B,OAAA,CAACR,YAAY;YAACuC,SAAS,EAAE,GAAI;YAACL,SAAS,EAAC,qBAAqB;YAACF,IAAI,EAAC;UAAa;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAClF9B,OAAA;YAAQgC,IAAI,EAAC,QAAQ;YAAAnB,QAAA,EAAC;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV;AAAC5B,EAAA,CAhDeD,QAAQ;EAAA,QACOP,QAAQ,EACpBC,WAAW,EACbC,SAAS;AAAA;AAAAqC,EAAA,GAHVhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}